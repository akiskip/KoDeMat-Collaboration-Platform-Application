/* 
 * Copyright 2014 Institute fml (TU Munich) and Institute FLW (TU Dortmund).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package kodemat.visu.swing.tables;

import java.util.List;
import kodemat.visu.editor.VisuEditor;
import kodemat.visu.editor.selection.JMESelectionHandler;

/**
 *
 * @author Koshkabb
 */
public class ChangeHistoryFrame extends java.awt.Frame {

    private VisuEditor basicEditor;
    private boolean canUndo;
    private JMESelectionHandler selectedObject;

    /**
     * Creates new form ChangeHistoryFrame
     */
    public ChangeHistoryFrame(VisuEditor basicEditor, boolean canUndo, JMESelectionHandler selectedObject) {
        this.basicEditor = basicEditor;
        this.canUndo = canUndo;
        this.selectedObject = selectedObject;
        initComponents();
        if (this.selectedObject != null && this.selectedObject.getSelectedModel() != null) {
            setTitle("History for: "+selectedObject.getSelectedModel().getName());
        } else {
            setTitle("Global History");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        panel1 = new java.awt.Panel();
        panelButtons = new java.awt.Panel();
        historyArea = new java.awt.List();
        closeButton = new java.awt.Button();
        refreshButton = new java.awt.Button();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        this.setPreferredSize(new java.awt.Dimension(600, 300));
        panel1.setLayout(new java.awt.BorderLayout());
        panelButtons.setLayout(new java.awt.BorderLayout());
        if (canUndo) {
            historyArea.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    listObjectActionPerformed(evt);
                }
            });
        }
        panel1.add(historyArea, java.awt.BorderLayout.CENTER);

        closeButton.setLabel(org.openide.util.NbBundle.getMessage(ChangeHistoryFrame.class, "ChangeHistoryFrame.closeButton.label")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        refreshButton.setLabel(org.openide.util.NbBundle.getMessage(ChangeHistoryFrame.class, "ChangeHistoryFrame.refreshButton.label")); // NOI18N

        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        panelButtons.add(refreshButton, java.awt.BorderLayout.WEST);

        panelButtons.add(closeButton, java.awt.BorderLayout.EAST);
        closeButton.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ChangeHistoryFrame.class, "ChangeHistoryFrame.closeButton.AccessibleContext.accessibleName")); // NOI18N
        refreshButton.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ChangeHistoryFrame.class, "ChangeHistoryFrame.refreshButton.AccessibleContext.accessibleName")); // NOI18N
        refreshButton.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ChangeHistoryFrame.class, "ChangeHistoryFrame.refreshButton.AccessibleContext.accessibleName")); // NOI18N

        panel1.add(panelButtons, java.awt.BorderLayout.SOUTH);

        add(panel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {
        dispose();
    }

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {
        historyArea.removeAll();
//        basicEditor.refreshHistory(this, selectedObject);
    }

    private void listObjectActionPerformed(java.awt.event.ActionEvent evt) {
        int i = historyArea.getItemCount() - 1;
        int numberUndos = 1;
        while (i >= historyArea.getSelectedIndex()) {
            if (!historyArea.getItem(i).contains("UNDO")) {
                numberUndos++;
            }
            i--;
        }
        basicEditor.undo(numberUndos);
    }

    public void showHistory(List<String> history) {
        for (String change : history) {
            historyArea.add(change);
        }
        historyArea.select(historyArea.getItemCount() - 1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChangeHistoryFrame chf = new ChangeHistoryFrame(null, true, null);
                chf.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private java.awt.Button closeButton;
    private java.awt.Button refreshButton;
    private java.awt.List historyArea;
    private java.awt.Panel panel1;
    private java.awt.Panel panelButtons;
    // End of variables declaration
}
